<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Imagonem.local" name="Default test" tests="96" failures="0" timestamp="29 Jan 2012 13:57:24 GMT" time="3.503" errors="0">
  <testcase name="asString" time="0.032" classname="org.technbolts.jbehave.support.JBKeywordTest"/>
  <testcase name="isTheStartOfOneOf" time="0.0020" classname="org.technbolts.util.StringEnhancerTest"/>
  <testcase name="templatizeVariables_" time="0.0020" classname="org.technbolts.eclipse.util.TemplateUtilsTest"/>
  <testcase name="getSubLineUntilOffset" time="0.0070" classname="org.technbolts.util.StringsTest"/>
  <testcase name="tet_removeTrailingNewline" time="0.0010" classname="org.technbolts.util.StringsTest"/>
  <testcase name="acceptsInputPart_noParameter" time="0.0050" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="acceptsInputPart_with2Parameters_after2ndParameter" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="acceptsInputPart_with2Parameters_before2ndParameter" time="0.0" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="acceptsInputPart_with2Parameters_fullMatch" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="acceptsInputPart_with2Parameters_inside2ndParameter" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="acceptsInputPart_withParameter_afterParameter" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="acceptsInputPart_withParameter_beforeParameter_fullLiteral" time="0.0020" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="acceptsInputPart_withParameter_beforeParameter_insideLiteral_ex1" time="0.0020" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="acceptsInputPart_withParameter_beforeParameter_insideLiteral_ex2" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="acceptsInputPart_withParameter_beforeParameter_invalidLiteral" time="0.0" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="acceptsInputPart_withParameter_fullMatch" time="0.0090" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="acceptsInputPart_withParameter_insideParameter" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="complete_noParameter_ex1" time="0.0" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="complete_noParameter_ex2" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="complete_noParameter_ex3" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="complete_with2Parameters_after2ndParameter" time="0.0" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="complete_with2Parameters_before2ndParameter_ex1" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="complete_with2Parameters_before2ndParameter_ex2" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="complete_with2Parameters_fullMatch" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="complete_with2Parameters_inside2ndParameter" time="0.0" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="complete_withParameter_afterParameter" time="0.0" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="complete_withParameter_beforeParameter_fullLiteral" time="0.0" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="complete_withParameter_beforeParameter_insideLiteral_ex1" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="complete_withParameter_beforeParameter_insideLiteral_ex2" time="0.0" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="complete_withParameter_beforeParameter_invalidLiteral" time="0.0030" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="complete_withParameter_fullMatch" time="0.0" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="complete_withParameter_insideParameter" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="getParameters" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="getParameters_parameterAtEnd" time="0.0" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="getTokens" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="getTokens_ex1" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="matches_noParameter" time="0.082" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="matches_withOneParameter" time="0.0" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="matches_withTwoParameters" time="0.0" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="weightChain_ex1" time="0.0" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="weightChain_noParameter_ex1" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="weightChain_noParameter_ex2" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="weightChain_noParameter_ex3" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="weightChain_with2Parameters_after2ndParameter" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="weightChain_with2Parameters_before2ndParameter_ex1" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="weightChain_with2Parameters_before2ndParameter_ex2" time="0.0" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="weightChain_with2Parameters_fullMatch" time="0.0" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="weightChain_with2Parameters_inside2ndParameter" time="0.0" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="weightChain_withNewlines" time="0.0" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="weightChain_withNewlines_noParameterBefore" time="0.0" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="weightChain_withParameter_afterParameter" time="0.013" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="weightChain_withParameter_beforeParameter_fullLiteral" time="0.0020" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="weightChain_withParameter_beforeParameter_insideLiteral_ex1" time="0.0" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="weightChain_withParameter_beforeParameter_insideLiteral_ex2" time="0.0" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="weightChain_withParameter_beforeParameter_invalidLiteral" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="weightChain_withParameter_fullMatch" time="0.0" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="weightChain_withParameter_insideParameter" time="0.0010" classname="org.technbolts.util.ParametrizedStringTest"/>
  <testcase name="usecase_ex1" time="0.035" classname="org.technbolts.eclipse.jbehave.PartitionScannerTest"/>
  <testcase name="containsExampleTable_noTable" time="0.0020" classname="org.technbolts.jbehave.parser.ConstantsTest"/>
  <testcase name="containsExampleTable_noTableButComment" time="0.0010" classname="org.technbolts.jbehave.parser.ConstantsTest"/>
  <testcase name="containsExampleTable_withTable" time="0.0020" classname="org.technbolts.jbehave.parser.ConstantsTest"/>
  <testcase name="containsExampleTable_withTableAndComment" time="0.0010" classname="org.technbolts.jbehave.parser.ConstantsTest"/>
  <testcase name="containsExampleTable_withTable_edgeCase1" time="0.0010" classname="org.technbolts.jbehave.parser.ConstantsTest"/>
  <testcase name="containsExampleTable_withTable_edgeCase2" time="0.0010" classname="org.technbolts.jbehave.parser.ConstantsTest"/>
  <testcase name="removeComment_ex1" time="0.0010" classname="org.technbolts.jbehave.parser.ConstantsTest"/>
  <testcase name="removeComment_noComment" time="0.0010" classname="org.technbolts.jbehave.parser.ConstantsTest"/>
  <testcase name="removeComment_onlyOneComment" time="0.0010" classname="org.technbolts.jbehave.parser.ConstantsTest"/>
  <testcase name="removeComment_onlySeveralComments" time="0.0010" classname="org.technbolts.jbehave.parser.ConstantsTest"/>
  <testcase name="splitLine" time="0.0020" classname="org.technbolts.jbehave.parser.ConstantsTest"/>
  <testcase name="splitLine_startsWithNL" time="0.0020" classname="org.technbolts.jbehave.parser.ConstantsTest"/>
  <testcase name="tokenize_" time="0.0010" classname="org.technbolts.jbehave.parser.ConstantsTest"/>
  <testcase name="usecaseEx1" time="0.0010" classname="org.technbolts.util.RegexTest"/>
  <testcase name="usecaseEx2" time="0.0030" classname="org.technbolts.util.RegexTest"/>
  <testcase name="usecase" time="2.532" classname="org.technbolts.util.ProcessGroupTest"/>
  <testcase name="lookup" time="0.0010" classname="org.technbolts.util.CharTreeTest"/>
  <testcase name="lookup_missing" time="0.0010" classname="org.technbolts.util.CharTreeTest"/>
  <testcase name="useCase_ex1" time="0.0080" classname="org.technbolts.jbehave.eclipse.editors.story.scanner.StepScannerStyledTest"/>
  <testcase name="parse_case1" time="0.0020" classname="org.technbolts.jbehave.parser.StoryParserTest"/>
  <testcase name="parse_case2" time="0.0" classname="org.technbolts.jbehave.parser.StoryParserTest"/>
  <testcase name="parse_case4" time="0.0030" classname="org.technbolts.jbehave.parser.StoryParserTest"/>
  <testcase name="parse_case5_exampleTable" time="0.0020" classname="org.technbolts.jbehave.parser.StoryParserTest"/>
  <testcase name="parse_case6_exampleTable" time="0.0030" classname="org.technbolts.jbehave.parser.StoryParserTest"/>
  <testcase name="parse_case7_exampleTable" time="0.011" classname="org.technbolts.jbehave.parser.StoryParserTest"/>
  <testcase name="usecase_ex04_exampleTable" time="0.018" classname="org.technbolts.eclipse.jbehave.StepParserTest"/>
  <testcase name="usecase_ex05_exampleTable" time="0.014" classname="org.technbolts.eclipse.jbehave.StepParserTest"/>
  <testcase name="usecase_ex1" time="0.079" classname="org.technbolts.eclipse.jbehave.StepParserTest"/>
  <testcase name="usecase_ex2" time="0.056" classname="org.technbolts.eclipse.jbehave.StepParserTest"/>
  <testcase name="usecase_ex3" time="0.024" classname="org.technbolts.eclipse.jbehave.StepParserTest"/>
  <testcase name="useCase_exampleTableWithComment_case1" time="0.0010" classname="org.technbolts.jbehave.parser.ContentWithIgnorableEmitterTest"/>
  <testcase name="useCase_exampleTableWithComment_case2" time="0.012" classname="org.technbolts.jbehave.parser.ContentWithIgnorableEmitterTest"/>
  <testcase name="no_include_one_exclude" time="0.051" classname="org.technbolts.util.StringMatcherTest"/>
  <testcase name="no_include_two_excludes" time="0.0010" classname="org.technbolts.util.StringMatcherTest"/>
  <testcase name="no_includes_no_excludes" time="0.0010" classname="org.technbolts.util.StringMatcherTest"/>
  <testcase name="one_include_no_excludes" time="0.0" classname="org.technbolts.util.StringMatcherTest"/>
  <testcase name="one_include_one_exclude" time="0.0010" classname="org.technbolts.util.StringMatcherTest"/>
  <testcase name="two_includes_no_excludes" time="0.0" classname="org.technbolts.util.StringMatcherTest"/>
</testsuite>
